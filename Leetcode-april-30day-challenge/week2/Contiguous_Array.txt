/*
Given a binary array, find the maximum length of a contiguous subarray with equal number of 0 and 1.

Example 1:
Input: [0,1]
Output: 2
Explanation: [0, 1] is the longest contiguous subarray with equal number of 0 and 1.
Example 2:
Input: [0,1,0]
Output: 2
Explanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.
Note: The length of the given binary array will not exceed 50,000.
*/


solution:


class Solution {
public:
    int findMaxLength(vector<int>& nums) {
        int i,res=0,n=nums.size(),c=0;
        map<int,int>mp;
        for(i=0;i<n;i++){
            nums[i]==0?c=c-1:c=c+1;
            if(c==0)
                res=max(res,i+1);
            else if(!mp[c])
                mp[c]=i+1;
            else
                res=max(res,abs(i+1-mp[c]));
        }
        return res;
        
    }
};