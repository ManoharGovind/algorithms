Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

Example:

Input:
[
  [1,3,1],
  [1,5,1],
  [4,2,1]
]
Output: 7
Explanation: Because the path 1→3→1→1→1 minimizes the sum.


SOLUTION:

class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int i,j,r=grid.size(),c=grid[0].size(),s=0;
        for(i=0;i<c;i++){
            s=s+grid[0][i];
            grid[0][i]=s;
        }
        s=0;
        for(i=0;i<r;i++){
            s=s+grid[i][0];
            grid[i][0]=s;
        }
        for(i=1;i<r;i++){
            for(j=1;j<c;j++){
                grid[i][j]=grid[i][j]+min(grid[i-1][j],grid[i][j-1]);
            }
        }
        return grid[r-1][c-1];
    }
};