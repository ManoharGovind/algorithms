Given a 2D binary matrix filled with 0's and 1's, find the largest square containing only 1's and return its area.

Example:

Input: 

1 0 1 0 0
1 0 1 1 1
1 1 1 1 1
1 0 0 1 0

Output: 4



Solution:
class Solution {
public:
    int maximalSquare(vector<vector<char>>& a) {
        if(a.size()==0)
            return 0;
        int mn=2,r=a.size(),c=a[0].size(),i,j,ans=0;
        int dp[r+1][c+1];
        memset(dp,0,sizeof(dp));
        for(i=1;i<=r;i++){
            for(j=1;j<=c;j++){
                if(a[i-1][j-1]=='1'){
                    mn=min(dp[i-1][j-1],dp[i-1][j]);
                    mn=min(mn,dp[i][j-1]);
                    dp[i][j]=1+mn;
                    ans=max(ans,dp[i][j]);
                }
            }
        }
        return ans*ans;
    }
};